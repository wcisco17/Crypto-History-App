import regeneratorRuntime from"regenerator-runtime";import{PutItemCommand}from'@crypto-aws/client';import{getHistoricalCoinAPIData,getHistoricalCryptoCompareOHLCVData}from'@crypto-api/db';function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}export function createNumerical(_){return _createNumerical.apply(this,arguments)}function _createNumerical(){_createNumerical=_asyncToGenerator(regeneratorRuntime.mark(function _callee(param){var client,coinName,coinapi,coinCompare,limit,time,hour,convertTime,ref,orderbooks,_iteratorNormalCompletion,_didIteratorError,_iteratorError,_iterator,_step,orderbook,ohlcvCryptoCompare,_iteratorNormalCompletion1,_didIteratorError1,_iteratorError1,_iterator1,_step1,coin;return regeneratorRuntime.wrap(function _callee$(_ctx){while(1)switch(_ctx.prev=_ctx.next){case 0:client=param.client,coinName=param.coinName,coinapi=param.coinapi,coinCompare=param.coinCompare,limit=param.limit,time=param.time,hour=param.hour,convertTime=param.convertTime;_ctx.next=4;return getHistoricalCoinAPIData({limit:limit,time_start:time,time_end:'',symbol:{coinapi:coinapi},historical:'quotes'});case 4:orderbooks=_ctx.sent;_iteratorNormalCompletion=true,_didIteratorError=false,_iteratorError=undefined;if(!orderbooks.error){_ctx.next=10;break}throw Error("[orderbooks] ".concat(orderbooks.error));case 10:_ctx.prev=10;_iterator=orderbooks[Symbol.iterator]();case 12:if(_iteratorNormalCompletion=(_step=_iterator.next()).done){_ctx.next=19;break}orderbook=_step.value;_ctx.next=16;return client.send(new PutItemCommand({TableName:'CryptoOrderBooks',Item:{CryptoSymbolID:{S:coinName},PriceTimeStamp:{N:convertTime.toString()},BidSize:{N:orderbook.bid_size.toString()},BidPrice:{N:orderbook.bid_price.toString()},AsksSize:{N:orderbook.ask_size.toString()},AsksPrice:{N:orderbook.ask_price.toString()},DataType:{S:'orderbooks'}}}));case 16:_iteratorNormalCompletion=true;_ctx.next=12;break;case 19:_ctx.next=25;break;case 21:_ctx.prev=21;_ctx.t0=_ctx["catch"](10);_didIteratorError=true;_iteratorError=_ctx.t0;case 25:_ctx.prev=25;_ctx.prev=26;if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return()}case 28:_ctx.prev=28;if(!_didIteratorError){_ctx.next=31;break}throw _iteratorError;case 31:return _ctx.finish(28);case 32:return _ctx.finish(25);case 33:_ctx.next=35;return getHistoricalCryptoCompareOHLCVData({limit:limit,time_start:convertTime.toString(),symbol:{coinCompare:coinCompare}});case 35:ohlcvCryptoCompare=_ctx.sent;_iteratorNormalCompletion1=true,_didIteratorError1=false,_iteratorError1=undefined;if(!((ohlcvCryptoCompare===null||ohlcvCryptoCompare===void 0?void 0:(ref=ohlcvCryptoCompare.Message)===null||ref===void 0?void 0:ref.length)>=1)){_ctx.next=41;break}throw new Error("[ohlcvCryptoCompare] ".concat(ohlcvCryptoCompare===null||ohlcvCryptoCompare===void 0?void 0:ohlcvCryptoCompare.Message));case 41:_ctx.prev=41;_iterator1=ohlcvCryptoCompare.Data[Symbol.iterator]();case 43:if(_iteratorNormalCompletion1=(_step1=_iterator1.next()).done){_ctx.next=50;break}coin=_step1.value;_ctx.next=47;return client.send(new PutItemCommand({TableName:'CryptoPrices',Item:{CryptoSymbolID:{S:coinName},PriceTimeStamp:{N:convertTime.toString()},TimeStamp:{N:coin.time.toString()},Close:{N:coin.close.toString()},High:{N:coin.high.toString()},Low:{N:coin.low.toString()},Open:{N:coin.open.toString()},DataType:{S:'ohlcv'}}}));case 47:_iteratorNormalCompletion1=true;_ctx.next=43;break;case 50:_ctx.next=56;break;case 52:_ctx.prev=52;_ctx.t1=_ctx["catch"](41);_didIteratorError1=true;_iteratorError1=_ctx.t1;case 56:_ctx.prev=56;_ctx.prev=57;if(!_iteratorNormalCompletion1&&_iterator1.return!=null){_iterator1.return()}case 59:_ctx.prev=59;if(!_didIteratorError1){_ctx.next=62;break}throw _iteratorError1;case 62:return _ctx.finish(59);case 63:return _ctx.finish(56);case 64:case"end":return _ctx.stop()}},_callee,null,[[10,21,25,33],[26,,28,32],[41,52,56,64],[57,,59,63]])}));return _createNumerical.apply(this,arguments)}